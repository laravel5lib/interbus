# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2

jobs:
  build:
    docker:
      # specify the version you desire here
      - image: php:7.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mysql:9.4

    working_directory: ~/repo

    steps:
      - run: apt-get update -y
      - run: curl -sL https://deb.nodesource.com/setup_9.x | bash -
      - run: apt-get install -y nodejs git zip libpng-dev
      - run: curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
      - run: docker-php-ext-install pcntl posix
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "composer.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: composer install -n --prefer-dist
      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}

      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-
      - run: npm install
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules

      - run: cp .env.example .env
      - run: php artisan key:generate

      # run tests!
      - run: ./vendor/bin/phpunit

  deploy-stage:
    docker:
      - image: centos:latest

    steps:
      - add_ssh_keys:
          fingerprints:
            - 13:45:42:a9:87:b8:8c:1b:61:01:ac:42:17:2f:83:11
      - run: yum install -y openssh-server openssh-clients
      - run: ssh -oStrictHostKeyChecking=no interbus-deploy@staging.interbus.space && echo "Test" > test.txt



workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy-stage:
          requires:
            - build
          filters:
            branches:
              only: dev